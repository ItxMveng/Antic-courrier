// login.jsx

import '../login.css'
import React, { useState, useEffect } from 'react'
import { Box } from '@mui/material'
import MyTextField from './forms/MyTextField'
import MyPassField from './forms/MyPassField'
import MyButton from './forms/MyButton'
import { Link } from 'react-router-dom'
import { useForm } from 'react-hook-form'
import AxiosInstance from './AxiosInstance'
import { useNavigate } from 'react-router-dom'
import MyMessage from './Message'

const Login = () => {
    const navigate = useNavigate()
    const { handleSubmit, control } = useForm()
    const [showMessage, setShowMessage] = useState(false)
    const [currentIndex, setCurrentIndex] = useState(0)
    const messages = [
        "Bienvenue sur ART-Mail.",
        "Organisez votre journée avec simplicité.",
        "Faites passer votre organisation au niveau supérieur avec ART-Mail."
    ]

    useEffect(() => {
        const interval = setInterval(() => {
            setCurrentIndex(prevIndex => (prevIndex + 1) % messages.length)
        }, 3000) // Change message every 3 seconds

        return () => clearInterval(interval)
    }, [])

    const submission = (data) => {
        AxiosInstance.post('login/', {
            email: data.email,
            password: data.password,
        })
            .then((response) => {
                console.log(response)
                localStorage.setItem('Token', response.data.token)
                navigate(`/home`)
            })
            .catch((error) => {
                setShowMessage(true)
                console.error('Error during login', error)
            })
    }

    return (
        <div className="myBackground">
            {showMessage ? <MyMessage text={"Connexion echouer, Essayer encore, Ou reset renitialiser votre mot de passe"} color={'#EC5A76'} /> : null}
            <Box className="whiteBox">
                <div className="leftSection">
                    <h2>Bienvenue sur ART-Mail.</h2>
                    <p className="textFadeInOut">{messages[currentIndex]}</p>
                </div>
                <div className="rightSection">
                    <form onSubmit={handleSubmit(submission)}>
                        <Box className="itemBox">
                            <Box className="title">Connexion</Box>
                        </Box>
                        <Box className="itemBox">
                            <MyTextField
                                label={"Email"}
                                name={"email"}
                                control={control}
                            />
                        </Box>
                        <Box className="itemBox">
                            <MyPassField
                                label={"Password"}
                                name={"password"}
                                control={control}
                            />
                        </Box>
                        <Box className="itemBox">
                            <MyButton
                                label={"Login"}
                                type={"submit"}
                            />
                        </Box>
                        <Box className="itemBox">
                            <Link to="/register">Aucun Compte ? Inscription !</Link>
                            <Link to="/request/password_reset">Mot de passe Oublier ?</Link>
                        </Box>
                    </form>
                </div>
            </Box>
        </div>
    )
}

export default Login

// Register.jsx
import '../login.css'
import React, { useState, useEffect } from 'react'
import { Box } from '@mui/material'
import MyTextField from './forms/MyTextField'
import MyPassField from './forms/MyPassField'
import MyButton from './forms/MyButton'
import { Link, useNavigate } from 'react-router-dom'
import { useForm } from 'react-hook-form'
import { yupResolver } from '@hookform/resolvers/yup'
import * as yup from 'yup'
import AxiosInstance from './AxiosInstance'

const Register = () => {
    const navigate = useNavigate()
    const [showText, setShowText] = useState(true)
    const [currentIndex, setCurrentIndex] = useState(0)
    const messages = [
        "Transformez la manière dont vous gérez vos courriers. Rejoignez-nous aujourd'hui et bénéficiez d'une solution de transfert pratique et efficace.",
        "Optimisez la gestion de vos courriers dès maintenant. Inscrivez-vous pour un service de transfert de courrier fluide et sans tracas",
        "Transformez la manière dont vous gérez vos courriers."
    ]
    
    const schema = yup
        .object({
            email: yup.string().email('Field expects an email address').required('Email is a required field'),
            password: yup.string()
                .required('Password is a required field')
                .min(8, 'Password must be at least 8 characters')
                .matches(/[A-Z]/, 'Password must contain at least one uppercase letter')
                .matches(/[a-z]/, 'Password must contain at least one lowercase letter')
                .matches(/[0-9]/, 'Password must contain at least one number')
                .matches(/[!@#$%^&*(),.?":;{}|<>+]/, 'Password must contain at least one special character'),
            password2: yup.string().required('Password confirmation is a required field')
                .oneOf([yup.ref('password'), null], 'Passwords must match')
        })

    const { handleSubmit, control } = useForm({ resolver: yupResolver(schema) })

    const submission = (data) => {
        AxiosInstance.post('register/', {
            email: data.email,
            password: data.password,
        })
            .then(() => {
                navigate(`/`)
            })
            .catch(error => {
                console.error('Registration error', error)
            })
    }

    useEffect(() => {
        const interval = setInterval(() => {
            setCurrentIndex(prevIndex => (prevIndex + 1) % messages.length)
        }, 3000) // Change message every 3 seconds

        return () => clearInterval(interval)
    }, [])

    return (
        <div className="myBackground">
            <Box className="whiteBox">
                <div className="leftSection">
                    <h2>{messages[currentIndex]}</h2>
                </div>
                <div className="rightSection">
                    <form onSubmit={handleSubmit(submission)}>
                        <Box className="itemBox">
                            <Box className="title">Inscription</Box>
                        </Box>
                        <Box className="itemBox">
                            <MyTextField
                                label={"Email"}
                                name={"email"}
                                control={control}
                            />
                        </Box>
                        <Box className="itemBox">
                            <MyPassField
                                label={"Password"}
                                name={"password"}
                                control={control}
                            />
                        </Box>
                        <Box className="itemBox">
                            <MyPassField
                                label={"Confirm Password"}
                                name={"password2"}
                                control={control}
                            />
                        </Box>
                        <Box className="itemBox">
                            <MyButton
                                type={"submit"}
                                label={"Register"}
                            />
                        </Box>
                        <Box className="itemBox">
                            <Link to="/">Déja Inscrit ? Connexion !</Link>
                        </Box>
                    </form>
                </div>
            </Box>
        </div>
    )
}

export default Register

// app.jsx

import { useState } from 'react'
import './App.css'
import Home from './components/Home'
import Register from './components/Register'
import Login from './components/Login'
import About from './components/About'
import Send from './components/Send'
import Receive from './components/Receive'
import Profils from './components/Profils'
import Navbar from './components/Navbar'
import {Routes, Route, useLocation} from 'react-router-dom'
import ProtectedRoute from './components/ProtectedRoutes'
import PasswordResetRequest from './components/PasswordResetRequest'
import PasswordReset from './components/PasswordReset'

function App() {
  const location = useLocation()
  const noNavbar = location.pathname === "/register" || location.pathname === "/" || location.pathname.includes("password")

  return (
    <>
      {
        noNavbar ?
        <Routes>
          
            <Route path="/" element={<Login/>}/>
            <Route path="/register" element={<Register/>}/>
            <Route path="/request/password_reset" element={<PasswordResetRequest/>}/>
            <Route path="/password-reset/:token" element={<PasswordReset/>}/>
        </Routes>

        :

        <Navbar
        content={
          <Routes>
            <Route element={<ProtectedRoute/>}> 
                <Route path="/home" element={<Home/>}/>
                <Route path="/send" element={<Send/>}/>
                <Route path="/receive" element={<Receive/>}/>
                <Route path="/about" element={<About/>}/>
                <Route path="/profils" element={<Profils/>}/>
            </Route>
          </Routes>

        }
      />
      }
    </>
  )
}

export default App

// ProtectedRoute.jsx

import {Outlet, Navigate} from 'react-router-dom'

const ProtectedRoute = () => {
    const token = localStorage.getItem('Token')

    return(

        token ? <Outlet/> : <Navigate to="/" />
    )

}

export default ProtectedRoute